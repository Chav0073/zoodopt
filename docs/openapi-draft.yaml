openapi: 3.0.3
info:
  title: Zoodopt API
  version: 1.0.0
  description: REST API for pet adoption platform connecting shelters with adopters.

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /auth/register:
    post:
      summary: Register a new user (Public, ShelterStaff, or Admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "200":
          description: Registration successful
        "400":
          description: Validation failed

  /auth/login:
    post:
      summary: Authenticate user and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Login successful
        "401":
          description: Invalid credentials

  /auth/logout:
    post:
      summary: "Logout user (client should remove JWT token)"
      responses:
        "200":
          description: Logout successful

  /users/me:
    get:
      summary: Get profile of the currently authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Returns user info (id, email, role)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: Unauthorized

  /pets:
    get:
      summary: Get all adoptable pets (with optional filters)
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: ageGroup
          in: query
          schema:
            type: string
        - name: shelterId
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: List of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"

    post:
      summary: Create a new pet listing (shelter staff only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreate"
      responses:
        "201":
          description: Pet created
        "401":
          description: Unauthorized

  /applications:
    get:
      summary: Get applications for shelter's pets (shelter staff only)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of applications

    post:
      summary: Submit adoption application (public users)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationCreate"
      responses:
        "201":
          description: Application submitted

  /applications/mine:
    get:
      summary: Get all applications submitted by the logged-in user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user's applications
        "401":
          description: Unauthorized

  /shelters:
    get:
      summary: List all shelters
      responses:
        "200":
          description: List of shelters

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegister:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$"
          description: Must be at least 8 characters and contain uppercase, lowercase, and a digit
        role:
          type: string
          enum: [Public, ShelterStaff, Admin]
        shelterId:
          type: integer
          description: Required if registering as ShelterStaff

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    UserProfile:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string

    PetCreate:
      type: object
      required:
        - name
        - type
        - ageGroup
        - description
        - imageFileName
      properties:
        name:
          type: string
        type:
          type: string
        ageGroup:
          type: string
        description:
          type: string
        imageFileName:
          type: string
          description: Name of the uploaded image file (e.g., "bella.jpg"). Combine with /images/{imageFileName} to access.
        shelterId:
          type: integer

    Pet:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        ageGroup:
          type: string
        description:
          type: string
        imageFileName:
          type: string
        shelterId:
          type: integer

    ApplicationCreate:
      type: object
      required:
        - petId
      properties:
        petId:
          type: integer
        message:
          type: string
